name: SubSigma cron

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  run-subsigma:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.20.3

      - run: go build -v ./...

      - name: Install notify
        run: go install -v github.com/projectdiscovery/notify/cmd/notify@latest

      - name: Create config for notfiy
        run: |
          mkdir -p $HOME/.config/notify/
          cat >>$HOME/.config/notify/provider-config.yaml <<EOF
          telegram:
            - id: "tel"
              telegram_api_key: "${{ secrets.TELEGRAM_BOT_TOKEN }}"
              telegram_chat_id: "${{ secrets.TELEGRAM_ID }}"
              telegram_format: "{{data}}"
              telegram_parsemode: "Markdown"
          teams:
            - id: "teams"
              teams_webhook_url: "${{ secrets.TEAMS_WEBHOOK }}"
              teams_format: "{{data}}"
          EOF

      - name: Get state.json cache
        uses: actions/cache/restore@v3
        id: cache-restore
        with:
          path: |
            ./state.json
          key: ${{ runner.os }}-state
      
      - run: |
          chmod +x ./subsigma
          cp config.json.sample config.json

      - run: ./subsigma | notify -silent -bulk

      - name: Cleanup cache before save state.json
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH="${{ github.ref }}"

          echo "Fetching list of cache key"
          cacheKeys=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeys
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache state.json
        uses: actions/cache/save@v3
        with:
          path: |
            ./state.json
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
